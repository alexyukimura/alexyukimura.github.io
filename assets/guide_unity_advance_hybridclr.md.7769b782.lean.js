import{_ as e,o as l,c as r,N as i}from"./chunks/framework.295b9ee3.js";const b=JSON.parse('{"title":"HybridCLR 简介","description":"","frontmatter":{},"headers":[],"relativePath":"guide/unity/advance/hybridclr.md","lastUpdated":1745939366000}'),o={name:"guide/unity/advance/hybridclr.md"};function s(n,a,t,d,c,h){return l(),r("div",null,a[0]||(a[0]=[i(`<h1 id="hybridclr-简介" tabindex="-1">HybridCLR 简介 <a class="header-anchor" href="#hybridclr-简介" aria-label="Permalink to &quot;HybridCLR 简介&quot;">​</a></h1><h2 id="什么是-hybridclr" tabindex="-1">什么是 HybridCLR？ <a class="header-anchor" href="#什么是-hybridclr" aria-label="Permalink to &quot;什么是 HybridCLR？&quot;">​</a></h2><p>HybridCLR 是一个用于 Unity 项目的 AOT（Ahead-Of-Time）编译解决方案，旨在提高游戏的性能和安全性。通过将部分或全部 C# 代码编译为原生代码，HybridCLR 可以显著减少运行时的内存占用和启动时间，同时增强代码的安全性。</p><h2 id="主要特点" tabindex="-1">主要特点 <a class="header-anchor" href="#主要特点" aria-label="Permalink to &quot;主要特点&quot;">​</a></h2><h3 id="_1-高性能" tabindex="-1">1. 高性能 <a class="header-anchor" href="#_1-高性能" aria-label="Permalink to &quot;1. 高性能&quot;">​</a></h3><ul><li><strong>减少运行时内存占用</strong>：通过 AOT 编译，HybridCLR 减少了运行时的内存开销。</li><li><strong>提高启动速度</strong>：AOT 编译后的代码启动更快，减少了冷启动时间。</li></ul><h3 id="_2-安全性" tabindex="-1">2. 安全性 <a class="header-anchor" href="#_2-安全性" aria-label="Permalink to &quot;2. 安全性&quot;">​</a></h3><ul><li><strong>代码混淆</strong>：HybridCLR 支持代码混淆，增加了代码的安全性，防止反编译。</li><li><strong>运行时保护</strong>：通过原生代码执行，HybridCLR 提供了更高的运行时保护。</li></ul><h3 id="_3-兼容性" tabindex="-1">3. 兼容性 <a class="header-anchor" href="#_3-兼容性" aria-label="Permalink to &quot;3. 兼容性&quot;">​</a></h3><ul><li><strong>支持多种平台</strong>：HybridCLR 支持 Unity 支持的多种平台，包括 Android、iOS、Windows、macOS 等。</li><li><strong>与现有项目集成</strong>：HybridCLR 可以与现有的 Unity 项目无缝集成，无需大规模修改代码。</li></ul><h2 id="安装和配置" tabindex="-1">安装和配置 <a class="header-anchor" href="#安装和配置" aria-label="Permalink to &quot;安装和配置&quot;">​</a></h2><h3 id="_1-安装-hybridclr" tabindex="-1">1. 安装 HybridCLR <a class="header-anchor" href="#_1-安装-hybridclr" aria-label="Permalink to &quot;1. 安装 HybridCLR&quot;">​</a></h3><p>你可以通过 Unity 的 Package Manager 或者手动下载安装包来安装 HybridCLR。</p><h4 id="通过-package-manager-安装" tabindex="-1">通过 Package Manager 安装 <a class="header-anchor" href="#通过-package-manager-安装" aria-label="Permalink to &quot;通过 Package Manager 安装&quot;">​</a></h4><ol><li>打开 Unity 编辑器，进入 <code>Window</code> -&gt; <code>Package Manager</code>。</li><li>点击 <code>+</code> 按钮，选择 <code>Add package from git URL</code>。</li><li>输入 HybridCLR 的 Git URL，例如 <code>https://github.com/focus-creative-games/hybridclr.git</code>。</li><li>点击 <code>Add</code> 完成安装。</li></ol><h4 id="手动下载安装包" tabindex="-1">手动下载安装包 <a class="header-anchor" href="#手动下载安装包" aria-label="Permalink to &quot;手动下载安装包&quot;">​</a></h4><ol><li>访问 <a href="https://github.com/focus-creative-games/hybridclr" target="_blank" rel="noreferrer">HybridCLR GitHub 页面</a>。</li><li>下载最新的发布版本。</li><li>将下载的包导入到你的 Unity 项目中。</li></ol><h3 id="_2-配置-hybridclr" tabindex="-1">2. 配置 HybridCLR <a class="header-anchor" href="#_2-配置-hybridclr" aria-label="Permalink to &quot;2. 配置 HybridCLR&quot;">​</a></h3><p>安装完成后，你需要进行一些配置以确保 HybridCLR 正确运行。</p><h4 id="配置-aot-编译" tabindex="-1">配置 AOT 编译 <a class="header-anchor" href="#配置-aot-编译" aria-label="Permalink to &quot;配置 AOT 编译&quot;">​</a></h4><ol><li>打开 <code>Edit</code> -&gt; <code>Project Settings</code> -&gt; <code>Player</code>。</li><li>在 <code>Other Settings</code> 部分，找到 <code>Scripting Backend</code>，选择 <code>IL2CPP</code>。</li><li>确保 <code>Strip Engine Code</code> 选项被勾选。</li><li>在 <code>HybridCLR</code> 配置窗口中，添加需要 AOT 编译的程序集。</li></ol><h4 id="配置代码混淆" tabindex="-1">配置代码混淆 <a class="header-anchor" href="#配置代码混淆" aria-label="Permalink to &quot;配置代码混淆&quot;">​</a></h4><p>HybridCLR 支持代码混淆，可以增强代码的安全性。</p><ol><li>打开 <code>HybridCLR</code> 配置窗口。</li><li>在 <code>Obfuscation</code> 部分，启用代码混淆选项。</li><li>根据需要配置混淆规则。</li></ol><h2 id="使用示例" tabindex="-1">使用示例 <a class="header-anchor" href="#使用示例" aria-label="Permalink to &quot;使用示例&quot;">​</a></h2><h3 id="_1-创建一个简单的脚本" tabindex="-1">1. 创建一个简单的脚本 <a class="header-anchor" href="#_1-创建一个简单的脚本" aria-label="Permalink to &quot;1. 创建一个简单的脚本&quot;">​</a></h3><p>创建一个新的 C# 脚本，并添加一些示例代码。</p><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> UnityEngine</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ExampleScript</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MonoBehaviour</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Start</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        Debug</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Log</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello, HybridCLR!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="配置与构建步骤" tabindex="-1">配置与构建步骤 <a class="header-anchor" href="#配置与构建步骤" aria-label="Permalink to &quot;配置与构建步骤&quot;">​</a></h2><h3 id="配置-aot-编译-1" tabindex="-1">配置 AOT 编译 <a class="header-anchor" href="#配置-aot-编译-1" aria-label="Permalink to &quot;配置 AOT 编译&quot;">​</a></h3><p>为保证项目中脚本能被正确编译，需将对应程序集添加到 HybridCLR 的 AOT 编译列表。具体操作如下：</p><ol><li>打开 HybridCLR 配置窗口。</li><li>定位到 <code>AOT Assemblies</code> 部分。</li><li>添加 <code>Assembly-CSharp</code> 程序集，若还有其他需要 AOT 编译的程序集，也一并添加。</li></ol><h3 id="构建项目" tabindex="-1">构建项目 <a class="header-anchor" href="#构建项目" aria-label="Permalink to &quot;构建项目&quot;">​</a></h3><p>完成 AOT 编译配置后，按以下步骤构建 Unity 项目，验证 HybridCLR 是否正常工作：</p><ol><li>打开 <code>File</code> -&gt; <code>Build Settings</code>。</li><li>从列表中选择目标平台。</li><li>点击 <code>Build</code> 按钮开始构建。</li><li>构建完成后，运行项目，查看控制台输出信息。</li></ol><h2 id="常见问题解答" tabindex="-1">常见问题解答 <a class="header-anchor" href="#常见问题解答" aria-label="Permalink to &quot;常见问题解答&quot;">​</a></h2><h3 id="_1-hybridclr-是否支持所有-c-特性" tabindex="-1">1. HybridCLR 是否支持所有 C# 特性？ <a class="header-anchor" href="#_1-hybridclr-是否支持所有-c-特性" aria-label="Permalink to &quot;1. HybridCLR 是否支持所有 C# 特性？&quot;">​</a></h3><p>HybridCLR 支持大部分 C# 特性，但部分高级特性可能需要额外配置，甚至不被支持。如需详细了解，建议参考 <a href="https://focus-creative-games.github.io/hybridclr/" target="_blank" rel="noreferrer">HybridCLR 官方文档</a>。</p><h3 id="_2-使用-hybridclr-是否会影响开发效率" tabindex="-1">2. 使用 HybridCLR 是否会影响开发效率？ <a class="header-anchor" href="#_2-使用-hybridclr-是否会影响开发效率" aria-label="Permalink to &quot;2. 使用 HybridCLR 是否会影响开发效率？&quot;">​</a></h3><p>HybridCLR 能提升项目性能与安全性，但在配置和调试过程中会带来一定复杂度。建议在项目初期就完成配置，以此降低后期开发负担。</p><h3 id="_3-hybridclr-是否支持增量编译" tabindex="-1">3. HybridCLR 是否支持增量编译？ <a class="header-anchor" href="#_3-hybridclr-是否支持增量编译" aria-label="Permalink to &quot;3. HybridCLR 是否支持增量编译？&quot;">​</a></h3><p>HybridCLR 支持增量编译，这能显著减少编译时间。要启用该功能，可在 HybridCLR 配置窗口中找到并启用增量编译选项。</p><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>HybridCLR 是一款强大的工具，能有效提升 Unity 项目的性能与安全性。通过合理配置和使用，开发者可以充分发挥其优势，打造出更高质量的游戏。</p>`,44)]))}const y=e(o,[["render",s]]);export{b as __pageData,y as default};
