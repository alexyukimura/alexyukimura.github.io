import{_ as a,o as n,c as l,N as o}from"./chunks/framework.295b9ee3.js";const D=JSON.parse('{"title":"Unity UniTask","description":"","frontmatter":{},"headers":[],"relativePath":"guide/unity/advance/unitask.md","lastUpdated":1745939366000}'),p={name:"guide/unity/advance/unitask.md"};function t(e,s,c,r,i,y){return n(),l("div",null,s[0]||(s[0]=[o(`<h1 id="unity-unitask" tabindex="-1">Unity UniTask <a class="header-anchor" href="#unity-unitask" aria-label="Permalink to &quot;Unity UniTask&quot;">​</a></h1><h2 id="什么是unitask" tabindex="-1">什么是UniTask？ <a class="header-anchor" href="#什么是unitask" aria-label="Permalink to &quot;什么是UniTask？&quot;">​</a></h2><p>UniTask是Unity中一个强大的异步/等待(Async/Await)解决方案，它比传统的协程(Coroutine)更高效、更灵活。UniTask基于C#的Task异步模型，专门为Unity优化，提供了零分配(Zero Allocation)和更好的性能。</p><p>UniTask与协程的主要区别：</p><ul><li>基于C#原生async/await语法</li><li>更少的GC分配</li><li>更好的性能</li><li>更丰富的API功能</li><li>支持取消操作</li></ul><h2 id="如何安装unitask" tabindex="-1">如何安装UniTask？ <a class="header-anchor" href="#如何安装unitask" aria-label="Permalink to &quot;如何安装UniTask？&quot;">​</a></h2><ol><li><p>通过Unity Package Manager安装</p><ul><li>打开Window &gt; Package Manager</li><li>点击&quot;+&quot;按钮选择&quot;Add package from git URL&quot;</li><li>输入：<code>https://github.com/Cysharp/UniTask.git?path=src/UniTask/Assets/Plugins/UniTask</code></li></ul></li><li><p>或者通过OpenUPM安装</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">openupm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">com.cysharp.unitask</span></span>
<span class="line"></span></code></pre></div></li></ol><h2 id="基础用法示例" tabindex="-1">基础用法示例 <a class="header-anchor" href="#基础用法示例" aria-label="Permalink to &quot;基础用法示例&quot;">​</a></h2><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> Cysharp.Threading.Tasks</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> UnityEngine</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">UniTaskExample</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MonoBehaviour</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">UniTaskVoid</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Start</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 等待1秒</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F78C6C;">await</span><span style="color:#A6ACCD;"> UniTask</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Delay</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1000</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        Debug</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Log</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1秒后</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 等待下一帧</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F78C6C;">await</span><span style="color:#A6ACCD;"> UniTask</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">NextFrame</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        Debug</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Log</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">下一帧</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 异步加载资源</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">prefab</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">await</span><span style="color:#A6ACCD;"> Resources</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">LoadAsync</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">GameObject</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Prefab</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">Instantiate</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">prefab</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="实用示例-倒计时" tabindex="-1">实用示例：倒计时 <a class="header-anchor" href="#实用示例-倒计时" aria-label="Permalink to &quot;实用示例：倒计时&quot;">​</a></h2><div class="language-csharp"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">UniTaskVoid</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Countdown</span><span style="color:#89DDFF;">(int</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">seconds</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">seconds </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        Debug</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Log</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">seconds</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F78C6C;">await</span><span style="color:#A6ACCD;"> UniTask</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Delay</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1000</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        seconds</span><span style="color:#89DDFF;">--;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    Debug</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Log</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">倒计时结束！</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Start</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">Countdown</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">Forget</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="常见应用场景" tabindex="-1">常见应用场景 <a class="header-anchor" href="#常见应用场景" aria-label="Permalink to &quot;常见应用场景&quot;">​</a></h2><ol><li>异步加载资源</li><li>网络请求</li><li>UI动画序列</li><li>复杂的状态机</li><li>多任务并行处理</li></ol><h2 id="性能优化建议" tabindex="-1">性能优化建议 <a class="header-anchor" href="#性能优化建议" aria-label="Permalink to &quot;性能优化建议&quot;">​</a></h2><ol><li>尽量使用<code>UniTaskVoid</code>代替<code>UniTask</code>作为返回类型</li><li>使用<code>Forget()</code>方法处理不需要等待的任务</li><li>避免在Update中频繁创建新任务</li><li>合理使用取消令牌(CancellationToken)</li><li>使用<code>UniTask.WhenAll</code>并行处理多个任务</li></ol><h2 id="与协程的对比" tabindex="-1">与协程的对比 <a class="header-anchor" href="#与协程的对比" aria-label="Permalink to &quot;与协程的对比&quot;">​</a></h2><table><thead><tr><th>特性</th><th>UniTask</th><th>协程</th></tr></thead><tbody><tr><td>语法</td><td>async/await</td><td>yield return</td></tr><tr><td>GC分配</td><td>少</td><td>多</td></tr><tr><td>性能</td><td>高</td><td>低</td></tr><tr><td>取消支持</td><td>有</td><td>无</td></tr><tr><td>异常处理</td><td>完善</td><td>有限</td></tr><tr><td>并行处理</td><td>支持</td><td>不支持</td></tr></tbody></table>`,17)]))}const C=a(p,[["render",t]]);export{D as __pageData,C as default};
